/*
 * led7seg.c
 *
 *  Created on: Nov 20, 2022
 *      Author: duyvt
 */

#include "led7seg.h"

int led7buffer[4] = {0, 0, 0, 0};
int index_led =0;

void dis7SEG(int state){
	switch (state){
	case 0:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x3f), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x3f), 1);
		break;
	case 1:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x06), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x06), 1);
		break;
	case 2:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x5b), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x5b), 1);
		break;
	case 3:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x4f), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x4f), 1);
		break;
	case 4:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x66), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x66), 1);
		break;
	case 5:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x6d), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x6d), 1);
		break;
	case 6:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x7d), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x7d), 1);
		break;
	case 7:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x07), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x07), 1);
		break;
	case 8:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x7f), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x7f), 1);
		break;
	case 9:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0x6f), 0);
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(~0x6f), 1);
		break;
	default:
		HAL_GPIO_WritePin(GPIOB, (uint16_t)(0xff), 1);
		break;
	}
}

void clearAllSeg(){
	 HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
	 HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
	 HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
	 HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
}

void update7SEG(int index){
	switch (index){
	case 0:
		HAL_GPIO_WritePin(GPIOA, EN3_Pin, 1);
		HAL_GPIO_WritePin(GPIOA, EN0_Pin, 0);
		break;
	case 1:
		HAL_GPIO_WritePin(GPIOA, EN0_Pin, 1);
		HAL_GPIO_WritePin(GPIOA, EN1_Pin, 0);
		break;
	case 2:
		HAL_GPIO_WritePin(GPIOA, EN1_Pin, 1);
		HAL_GPIO_WritePin(GPIOA, EN2_Pin, 0);
		break;
	case 3:
		HAL_GPIO_WritePin(GPIOA, EN2_Pin, 1);
		HAL_GPIO_WritePin(GPIOA, EN3_Pin, 0);
		break;
	default:
		break;

}

void led7SEGRun(){
	if (timer3_flag ==1){
		setTimer3(10);
		clearAllSeg();

		switch (mode){
		case MOD_LED7_1:
			led7buffer[0] =1;
			led7buffer[1] =1;
			led7buffer[2] =10;
			led7buffer[3] =10;
			break;
		case MOD_LED7_2:
			led7buffer[0] =2;
			led7buffer[1] =2;
			led7buffer[2] =redTime/10;
			led7buffer[3] =redTime%10;
			break;
		case MOD_LED7_3:
			led7buffer[0] =3;
			led7buffer[1] =3;
			led7buffer[2] =yellowTime/10;
			led7buffer[3] =yellowTime%10;
			break;
		case MOD_LED7_4:
			led7buffer[0] =4;
			led7buffer[1] =4;
			led7buffer[2] =greenTime/10;
			led7buffer[3] =greenTime%10;
			break;
		default:
			break;
		}

		switch (index_led){
		case 0:
			update7SEG(index_led);
			index_led++;
			break;
		case 1:
			update7SEG(index_led);
			index_led++;
			break;
		case 2:
			update7SEG(index_led);
			index_led++;
			break;
		case 3:
			update7SEG(index_led);
			index_led =0;
			break;
		default:
			break;
		}
	}
}



